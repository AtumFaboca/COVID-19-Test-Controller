{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Rest API",
        "description": "Rest API for our project"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [
        {
            "name": "Users",
            "description": "Normal user"
        },
        {
            "name": "Technicians",
            "description": "Responsible for the tests"
        },
        {
            "name": "Requests",
            "description": "Requests made by the users and handled by the technicians"
        }
    ],
    "schemes": [
        "http"
    ],
    "securityDefinitions": {
        "Cookies": {
            "type": "apiKey",
            "name": "authToken",
            "in": "header"
        },
        "JWT": {
            "type": "apiKey",
            "name": "auth-token",
            "description": "JWT authorization of an API",
            "in": "header"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/users/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Login the user in the system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Username and password of the user that wants to login",
                        "schema": {
                            "$ref": "#/definitions/UserLogin"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Sucess!"
                    },
                    "400": {
                        "description": "Bad request! Wrong parameters, probably."
                    },
                    "404": {
                        "description": "Error! Problems with database connection, probably."
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "description": "Create a new user in the system",
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User that we want to create",
                        "schema": {
                            "$ref": "#/definitions/UserRegister"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Sucess!",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request! Wrong parameters, probably."
                    },
                    "404": {
                        "description": "Error! Problems with database connection, probably."
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "authToken",
                        "in": "header",
                        "description": "token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "summary": "Gets the list of users in the database",
                "responses": {
                    "200": {
                        "description": "Sucess!",
                        "schema": {
                            "$ref": "#definitions/UserResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection, probably."
                    }
                }
            }
        },
        "/users/{userId}": {
            "parameters": [
                {
                    "name": "userId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the target user",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the user with given ID",
                "responses": {
                    "200": {
                        "description": "The user was found!",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the user was not found!"
                    }
                }
            },
            "put": {
                "summary": "Update user with given ID",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user is updated!",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "400": {
                        "description":"Bad request! Wrong parameters, probably."
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the user was not found!"
                    }
                }
            },
            "delete": {
                "summary": "Delete the user with given ID",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "The user is deleted!",
                        "schema": {
                            "$ref": "#/definitions/UserResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the user was not found!"
                    }
                }
            }
        },
        "/technicians": {
            "get": {
                "tags": [
                    "Technicians"
                ],
                "summary": "Get all the technicians in the system",
                "responses": {
                    "200": {
                        "description": "Sucess!",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection, probably."
                    }
                }
            },
            "post": {
                "tags": [
                    "Technicians"
                ],
                "description": "Create a new technician in the system",
                "parameters": [
                    {
                        "name": "technician",
                        "in": "body",
                        "description": "Technician we want to create",
                        "schema": {
                            "$ref": "#/definitions/TechnicianRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New technician is created",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    }
                },
                "400": {
                    "description": "Bad request! Wrong parameters, probably."
                },
                "404": {
                    "description": "Error! Problems with database connection, probably."
                }
            }
        },
        "/technicians/{technicianId}": {
            "parameters": [
                {
                    "name": "technicianId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the target technician",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Technicians"
                ],
                "summary": "Get the technician with the given ID",
                "responses": {
                    "200": {
                        "description": "The technician is found!",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the user was not found!"
                    }
                }
            },
            "put": {
                "summary": "Update technician with the given ID",
                "tags": [
                    "Technicians"
                ],
                "parameters": [
                    {
                        "name": "technician",
                        "in": "body",
                        "description": "Technician with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The technician is updated!",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    },
                    "400": {
                        "description":"Bad request! Wrong parameters, probably."
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the technician was not found!"
                    }
                }
            },
            "delete": {
                "summary": "Delete the technician with given ID",
                "tags": [
                    "Technicians"
                ],
                "responses": {
                    "200": {
                        "description": "The technician is deleted!",
                        "schema": {
                            "$ref": "#/definitions/TechnicianResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the technician was not found!"
                    }
                }
            }
        },
        "/requests": {
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get all the requests in the system",
                "responses": {
                    "200": {
                        "description": "Sucess!",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection, probably."
                    }
                }
            },
            "post": {
                "tags": [
                    "Requests"
                ],
                "description": "Create a new request in the system",
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Request we want to create",
                        "schema": {
                            "$ref": "#/definitions/RequestRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "New request is created",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    }
                },
                "400": {
                    "description": "Bad request! Wrong parameters, probably."
                },
                "404": {
                    "description": "Error! Problems with database connection, probably."
                }
            }
        },
        "/requests/{requestId}": {
            "parameters": [
                {
                    "name": "requestId",
                    "in": "path",
                    "required": true,
                    "description": "ID of the target request",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get the request with the given ID",
                "responses": {
                    "200": {
                        "description": "The request is found!",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the request was not found!"
                    }
                }
            },
            "put": {
                "summary": "Update request with the given ID",
                "tags": [
                    "Requests"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "Request with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request is updated!",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    },
                    "400": {
                        "description":"Bad request! Wrong parameters, probably."
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the request was not found!"
                    }
                }
            },
            "delete": {
                "summary": "Delete the request with given ID",
                "tags": [
                    "Requests"
                ],
                "responses": {
                    "200": {
                        "description": "The request is deleted!",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the request was not found!"
                    }
                }
            }
        },
        "/requests/user/{username}": {
            "parameters": [
                {
                    "name": "username",
                    "in": "path",
                    "required": true,
                    "description": "Username of the target requests",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Requests"
                ],
                "summary": "Get the requests with the given username",
                "responses": {
                    "200": {
                        "description": "The request is found!",
                        "schema": {
                            "$ref": "#/definitions/RequestResponse"
                        }
                    },
                    "404": {
                        "description": "Error! Problems with database connection or the request was not found!"
                    }
                }
            }
        }
    },
    "definitions": {
        "UserLogin": {
            "required": [
                "username",
                "password"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "uniqueItems": true
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "UserRegister": {
            "required": [
                "username",
                "password",
                "fullName",
                "email",
                "birthDate",
                "civilNumber"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "uniqueItems": true
                },
                "password": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "required": true,
                    "uniqueItems": true
                },
                "birthDate": {
                    "type": "string"
                },
                "civilNumber": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "UserResponse": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "birthDate": {
                    "type": "string"
                },
                "civilNumber": {
                    "type": "string"
                },
                "registerDate": {
                    "type": "string"
                },
                "isInfected": {
                    "type": "boolean"
                }
            }
        },
        "Users": {
            "type": "array",
            "$ref": "#/definitions/UserResponse"
        },
        "TechnicianRequest": {
            "required": [
                "username",
                "password",
                "fullName",
                "civilNumber",
                "address",
                "phoneNumber",
                "email"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "civilNumber": {
                    "type": "string",
                    "uniqueItems": true
                },
                "address": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "Number",
                    "uniqueItems": true
                },
                "email": {
                    "type": "string",
                    "uniqueItems": true
                }
            }
        },
        "TechnicianResponse": {
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "fullName": {
                    "type": "string"
                },
                "civilNumber": {
                    "type": "string"
                },
                "registerDate": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "Number"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "Technicians": {
            "type": "array",
            "$ref": "#/definitions/TechnicianResponse"
        },
        "RequestRequest": {
            "required": [
                "requesterUsername",
                "description"
            ],
            "properties": {
                "requesterUsername": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        },
        "RequestResponse": {
            "required": [
                "requesterUsername",
                "description"
            ],
            "properties": {
                "requesterUsername": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "submitDate": {
                    "type": "string"
                },
                "firstTestDate": {
                    "type": "string"
                },
                "firstTestFilePath": {
                    "type": "string"
                },
                "firstResult": {
                    "type": "string"
                },
                "secondTestDate": {
                    "type": "string"
                },
                "secondTestFilePath": {
                    "type": "string"
                },
                "secondResult": {
                    "type": "string"
                },
                "finalResult": {
                    "type": "string"
                }
            }
        },
        "Requests": {
            "type": "array",
            "$ref": "#/definitions/RequestResponse"
        }
    }
}